(()=>{var e={94:(e,s,t)=>{const a=t(96),{userExists:r}=t(981),n=t(945),o=t(344);e.exports={handleLogin:async(e,s)=>{const{username:t,password:r}=e.body;if(!t||!r)return s.status(400).json({message:"Username and password required."});const i=await n.findOne({username:t}).exec();if(i||s.sendStatus(401),a.compare(r,i.password)){const e=o.sign({username:i.username},process.env.ACCESS_TOKEN_SECRET,{expiresIn:"15m"}),t=o.sign({username:i.username},process.env.REFRESH_TOKEN_SECRET,{expiresIn:"1d"});i.refreshToken=t,await i.save(),s.cookie("jwt",t,{httpOnly:!0,maxAge:864e5}),s.json({accessToken:e})}else s.sendStatus(401)},handleNewUser:async(e,s)=>{const{username:t,password:r}=e.body;if(!t||!r)return s.status(400).json({message:"Username and password required."});if(await n.findOne({username:t}).exec())return s.status(409).json({message:"Username already exists"});try{const e=await a.hash(r,10),o=new n({username:t,password:e});await o.save(),s.status(201).json({message:`User ${t} successfully created.`})}catch(e){s.status(500).json({message:e.message})}}}},427:(e,s,t)=>{t(185).connect(process.env.MONGODB_URL)},561:(e,s,t)=>{const a=t(344);t(142).config(),e.exports=(e,s,t)=>{const r=e.headers.authorization;if(!r)return s.sendStatus(401);const n=r.split(" ")[1];a.verify(n,process.env.ACCESS_TOKEN_SECRET,((a,r)=>{if(a)return s.sendStatus(403);e.user=r.username,t()}))}},294:e=>{e.exports=(e,s,t,a)=>{console.error(e),t.status(500).send(e)}},981:(e,s,t)=>{const a=t(256),r=t(517);e.exports=async function(e,s,t){const{newTag:n}=e.body,o=r.capitalize(n);(await a.findOne({}).exec()).allTags.some((e=>e===o))?s.status(400).json({message:"Tag already exists"}):t()}},954:(e,s,t)=>{const a=t(738),r=a.diskStorage({}),n=a({storage:r,fileFilter:(e,s,t)=>{"image/jpeg"===s.mimetype||"image/png"===s.mimetype?t(null,!0):t({message:"Invalid file type."},!1)}});e.exports=n},256:(e,s,t)=>{const a=t(185),r=new a.Schema({name:{type:String,required:!0,unique:!0},allTags:[String]},{timestamps:!0}),n=a.model("Category",r);e.exports=n},998:(e,s,t)=>{const a=t(185),r=new a.Schema({imageUrl:String,publicId:String},{timestamps:!0}),n=a.model("Image",r);e.exports={Image:n,imageSchema:r}},3:(e,s,t)=>{const a=t(185),{imageSchema:r}=t(998),n=new a.Schema({title:String,subtitle:String,content:String,images:[r],postTags:[String],category:String},{timestamps:!0}),o=a.model("Post",n);e.exports=o},945:(e,s,t)=>{const a=t(185),r=t(270),n=t(511),o=new a.Schema({username:{type:String,required:[!0,"Please provide a username"],unique:!0},password:{type:String,required:[!0,"Please provide a password"]},refreshToken:String},{timestamps:!0});o.plugin(r);const i=a.model("User",o);n.use(i.createStrategy()),n.serializeUser(i.serializeUser()),n.deserializeUser(i.deserializeUser()),e.exports=i},119:(e,s,t)=>{const a=new(t(860).Router),r=t(94);a.get("/login",((e,s)=>{s.render("login")})),a.post("/login",r.handleLogin),e.exports=a},437:(e,s,t)=>{const a=t(860),r=t(256),n=new a.Router,o=t(517),i=t(981);n.get("/api/categories/:category",(async(e,s)=>{try{const t=await r.find({name:o.capitalize(e.params.category)});s.json(t)}catch(e){s.status(400).send(e)}})),n.get("/api/categories/",(async(e,s)=>{try{const e=await r.findOne({name:"dummy"}).exec();s.status(200).json(e.allTags)}catch(e){s.status(400).send(e)}})),n.patch("/api/categories/tags",i,(async(e,s)=>{const{newTag:t}=e.body,a=o.capitalize(t);try{await r.findOneAndUpdate({name:"dummy"},{$push:{allTags:a}}),s.status(200).json(a)}catch(e){s.status(400).send(e)}})),n.patch("/api/categories/deleteTag",(async(e,s)=>{const{tagToDelete:t}=e.body;try{await r.findOneAndUpdate({name:"dummy"},{$pull:{allTags:t}}),s.status(200).json({deletedTag:t,message:"Tag deleted"})}catch(e){s.status(400).send(e)}})),e.exports=n},762:(e,s,t)=>{const a=t(860),r=t(954),n=t(561),o=t(3),{Image:i}=t(998),{uploadToCloudinary:c,removeFromCloudinary:u}=t(463),p=t(517),d=new a.Router,l=(t(738),r.array("images",20));d.get("/posts/new",n,(async(e,s)=>{})),d.get("/posts",(async(e,s)=>{try{const e=await o.find();s.status(200).json(e)}catch(e){s.status(404).send(e)}})),d.get("/api/posts/:category",(async(e,s)=>{try{const t=await o.find({category:p.capitalize(e.params.category)});s.status(200).json(t)}catch(e){s.status(404).send(e)}})),d.get("/api/posts/:category/:postId",(async(e,s)=>{try{const t=await o.findById(e.params.postId);s.status(200).json(t)}catch(e){s.status(400).send(e)}})),d.post("/posts",l,(async(e,s)=>{if(e.isAuthenticated()){const t=new o(e.body),a=await t.save(),r=e.files;await Promise.all(r.map((async e=>{const s=await c(e.path,"emaJons_dev"),t=new i({publicId:s.public_id,imageUrl:s.url});await o.updateOne({_id:a._id},{$addToSet:{images:[t]}})})));const n=await o.findById(t._id);s.status(200).json(n)}else s.redirect("/login")})),d.delete("/:category/:postId",(async(e,s)=>{try{const t=await o.findOne({_id:e.params.postId}).exec(),a=t.images.map((e=>e.publicId));a.length&&await u(a),await t.deleteOne(),s.status(200).json({message:"post deleted successfully"})}catch(e){s.status(400).send(e)}})),e.exports=d},979:(e,s,t)=>{const a=t(860).Router(),r=t(94);a.post("/register",r.handleNewUser),e.exports=a},532:(e,s,t)=>{const a=t(119),r=t(762),n=t(437),o=t(979);e.exports={authRouter:a,postRouter:r,categoryRouter:n,registerRouter:o}},463:(e,s,t)=>{const a=t(518);t(142).config(),a.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET}),e.exports={uploadToCloudinary:(e,s)=>a.v2.uploader.upload(e,{folder:s}).then((e=>({url:e.url,public_id:e.public_id}))).catch((e=>{console.log(e)})),removeFromCloudinary:async e=>{await a.v2.api.delete_resources(e,((e,s)=>{console.log(e,s)}))}}},96:e=>{"use strict";e.exports=require("bcrypt")},518:e=>{"use strict";e.exports=require("cloudinary")},582:e=>{"use strict";e.exports=require("cors")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},508:e=>{"use strict";e.exports=require("express-session")},344:e=>{"use strict";e.exports=require("jsonwebtoken")},517:e=>{"use strict";e.exports=require("lodash")},185:e=>{"use strict";e.exports=require("mongoose")},738:e=>{"use strict";e.exports=require("multer")},511:e=>{"use strict";e.exports=require("passport")},270:e=>{"use strict";e.exports=require("passport-local-mongoose")},17:e=>{"use strict";e.exports=require("path")}},s={};function t(a){var r=s[a];if(void 0!==r)return r.exports;var n=s[a]={exports:{}};return e[a](n,n.exports,t),n.exports}(()=>{const e=t(860);t(427),t(945),t(256);const s=t(532),a=t(511),r=t(508),n=t(294),o=t(17),i=t(582),c=e();c.use(i()),c.use(r({secret:process.env.SECRET,resave:!1,saveUninitialized:!1})),c.use(a.initialize()),c.use(a.session()),c.use(e.json()),c.set("view engine","ejs"),c.set("views","./src/views"),c.use(e.static("public")),c.use(e.urlencoded({extended:!0})),c.use(s.authRouter,s.postRouter,s.categoryRouter,s.registerRouter),c.use(n),c.use("/assets",e.static(o.join(__dirname,"../public"))),c.get("/*",((e,s)=>{try{s.render("home")}catch(e){s.status(400).send(e)}})),c.listen(3e3)})()})();