(()=>{var e={427:(e,s,t)=>{t(185).connect(process.env.MONGODB_URL)},954:(e,s,t)=>{const r=t(738),o=r.diskStorage({}),i=r({storage:o,fileFilter:(e,s,t)=>{"image/jpeg"===s.mimetype||"image/png"===s.mimetype?t(null,!0):t({message:"Invalid file type."},!1)}});e.exports=i},998:(e,s,t)=>{const r=t(185),o=new r.Schema({imageUrl:String,publicId:String},{timestamps:!0}),i=r.model("Image",o);e.exports={Image:i,imageSchema:o}},3:(e,s,t)=>{const r=t(185),{imageSchema:o}=t(998),i=new r.Schema({title:{type:String,required:!0},subtitle:String,content:String,images:[o],postTags:[]},{timestamps:!0}),a=r.model("Post",i);e.exports=a},945:(e,s,t)=>{const r=t(185),o=t(270),i=t(511),a=new r.Schema({username:String,password:String},{timestamps:!0});a.plugin(o);const n=r.model("User",a);i.use(n.createStrategy()),i.serializeUser(n.serializeUser()),i.deserializeUser(n.deserializeUser()),e.exports=n},119:(e,s,t)=>{const r=t(860),o=t(511),i=new r.Router;i.get("/login",((e,s)=>{s.render("login")})),i.post("/login",o.authenticate("local",{successRedirect:"/dashboard",failureRedirect:"/login"})),i.get("/dashboard",((e,s)=>{s.set("Cache-Control","no-cache, private, no-store, must-revalidate, max-stal e=0, post-check=0, pre-check=0"),e.isAuthenticated()?s.render("dashboard"):s.redirect("/login")})),e.exports=i},762:(e,s,t)=>{const r=t(860),o=t(954),i=t(3),{Image:a}=t(998),{uploadToCloudinary:n,removeFromCloudinary:c}=t(463),p=new r.Router,u=t(738),l=o.array("postImages",5);p.get("/posts",(async(e,s)=>{try{const e=await i.find();s.render("posts",{posts:e})}catch(e){s.status(400).send(e)}})),p.post("/posts",((e,s)=>{l(e,s,(async t=>{if(t instanceof u.MulterError)s.send(t.message);else if(t)s.status(400).send(t);else{const t=new i(e.body),r=await t.save(),o=e.files;await Promise.all(o.map((async e=>{const s=await n(e.path,"emaJons_dev"),t=new a({publicId:s.public_id,imageUrl:s.url});await i.updateOne({_id:r._id},{$addToSet:{images:[t]}})}))),s.redirect("/posts")}}))})),e.exports=p},532:(e,s,t)=>{const r=t(119),o=t(762);e.exports={authRouter:r,postRouter:o}},463:(e,s,t)=>{const r=t(518);t(142).config(),r.config({cloud_name:process.env.CLOUDINARY_CLOUD_NAME,api_key:process.env.CLOUDINARY_API_KEY,api_secret:process.env.CLOUDINARY_API_SECRET}),e.exports={uploadToCloudinary:(e,s)=>r.v2.uploader.upload(e,{folder:s}).then((e=>({url:e.url,public_id:e.public_id}))).catch((e=>{console.log(e)})),removeFromCloudinary:async e=>{await r.v2.uploader.destroy(e,((e,s)=>{console.log(e,s)}))}}},518:e=>{"use strict";e.exports=require("cloudinary")},142:e=>{"use strict";e.exports=require("dotenv")},860:e=>{"use strict";e.exports=require("express")},508:e=>{"use strict";e.exports=require("express-session")},185:e=>{"use strict";e.exports=require("mongoose")},738:e=>{"use strict";e.exports=require("multer")},511:e=>{"use strict";e.exports=require("passport")},270:e=>{"use strict";e.exports=require("passport-local-mongoose")}},s={};function t(r){var o=s[r];if(void 0!==o)return o.exports;var i=s[r]={exports:{}};return e[r](i,i.exports,t),i.exports}(()=>{const e=t(860);t(427);const s=t(945),{authRouter:r,postRouter:o}=t(532),i=t(511),a=t(508),n=e();n.use(a({secret:process.env.SECRET,resave:!1,saveUninitialized:!1})),n.use(i.initialize()),n.use(i.session()),n.use(e.json()),n.set("view engine","ejs"),n.set("views","./src/views"),n.use(e.static("public")),n.use(e.urlencoded({extended:!0})),n.use(o,r),n.post("/register",(async(e,t)=>{s.register({username:e.body.username},e.body.password,((s,r)=>{s?(console.log(s),t.redirect("/register")):i.authenticate("local")(e,t,(()=>{t.redirect("/dashboard")}))}))})),n.listen(3e3)})()})();